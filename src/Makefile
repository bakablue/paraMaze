#############################################################################
# Makefile for building: src
# Generated by qmake (2.01a) (Qt 4.8.6) on: ven. juil. 25 17:18:49 2014
# Project:  src.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
<<<<<<< HEAD
CFLAGS        = -pipe -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -std=c++11 -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -Wall -W -D_REENTRANT $(DEFINES)
=======
CFLAGS        = -pipe -march=i686 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -std=c++11 -march=i686 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -Wall -W -D_REENTRANT $(DEFINES)
>>>>>>> testgui
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1,--sort-common,--as-needed,-z,relro -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = algo_path.cc \
		cell.cc \
		colors.cc \
		main.cc \
		map.cc \
		mazegenerator.cc \
<<<<<<< HEAD
		parser.cc moc_colors.cpp \
		moc_mazegenerator.cpp
OBJECTS       = cell.o \
=======
		parser.cc moc_algo_path.cpp \
		moc_colors.cpp \
		moc_mazegenerator.cpp
OBJECTS       = algo_path.o \
		cell.o \
>>>>>>> testgui
		colors.o \
		main.o \
		map.o \
		mazegenerator.o \
		parser.o \
<<<<<<< HEAD
=======
		moc_algo_path.o \
>>>>>>> testgui
		moc_colors.o \
		moc_mazegenerator.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		src.pro
QMAKE_TARGET  = src
DESTDIR       = 
TARGET        = src

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: src.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile src.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile src.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/src1.0.0 || $(MKDIR) .tmp/src1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/src1.0.0/ && $(COPY_FILE) --parents algo_path.hh cell.hh colors.hh interface.hh map.hh mazegenerator.hh parser.hh .tmp/src1.0.0/ && $(COPY_FILE) --parents algo_path.cc cell.cc colors.cc main.cc map.cc mazegenerator.cc parser.cc .tmp/src1.0.0/ && (cd `dirname .tmp/src1.0.0` && $(TAR) src1.0.0.tar src1.0.0 && $(COMPRESS) src1.0.0.tar) && $(MOVE) `dirname .tmp/src1.0.0`/src1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/src1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

<<<<<<< HEAD
compiler_moc_header_make_all: moc_colors.cpp moc_mazegenerator.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_colors.cpp moc_mazegenerator.cpp
=======
compiler_moc_header_make_all: moc_algo_path.cpp moc_colors.cpp moc_mazegenerator.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_algo_path.cpp moc_colors.cpp moc_mazegenerator.cpp
moc_algo_path.cpp: map.hh \
		cell.hh \
		algo_path.hh
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) algo_path.hh -o moc_algo_path.cpp

>>>>>>> testgui
moc_colors.cpp: map.hh \
		cell.hh \
		colors.hh
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) colors.hh -o moc_colors.cpp

moc_mazegenerator.cpp: cell.hh \
		colors.hh \
		map.hh \
		mazegenerator.hh
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) mazegenerator.hh -o moc_mazegenerator.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

algo_path.o: algo_path.cc algo_path.hh \
		map.hh \
		cell.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o algo_path.o algo_path.cc

cell.o: cell.cc cell.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cell.o cell.cc

colors.o: colors.cc colors.hh \
		map.hh \
		cell.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o colors.o colors.cc

main.o: main.cc parser.hh \
		map.hh \
		cell.hh \
		colors.hh \
		mazegenerator.hh \
		algo_path.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cc

map.o: map.cc map.hh \
		cell.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o map.o map.cc

mazegenerator.o: mazegenerator.cc mazegenerator.hh \
		cell.hh \
		colors.hh \
		map.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mazegenerator.o mazegenerator.cc

parser.o: parser.cc parser.hh \
		map.hh \
		cell.hh \
		colors.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o parser.o parser.cc

<<<<<<< HEAD
=======
moc_algo_path.o: moc_algo_path.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_algo_path.o moc_algo_path.cpp

>>>>>>> testgui
moc_colors.o: moc_colors.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_colors.o moc_colors.cpp

moc_mazegenerator.o: moc_mazegenerator.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mazegenerator.o moc_mazegenerator.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

